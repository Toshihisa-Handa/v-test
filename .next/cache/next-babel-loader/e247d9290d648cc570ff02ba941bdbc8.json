{"ast":null,"code":"import querystring from 'querystring';\nconst {\n  SPOTIFY_CLIENT_ID: client_id,\n  SPOTIFY_CLIENT_SECRET: client_secret,\n  SPOTIFY_REFRESH_TOKEN: refresh_token\n} = process.env;\nconst basic = Buffer.from(`${client_id}:${client_secret}`).toString('base64');\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`;\nconst TOP_TRACKS_ENDPOINT = `https://api.spotify.com/v1/me/top/tracks`;\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`;\n\nconst getAccessToken = async () => {\n  const response = await fetch(TOKEN_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${basic}`,\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: querystring.stringify({\n      grant_type: 'refresh_token',\n      refresh_token\n    })\n  });\n  return response.json();\n};\n\nexport const getNowPlaying = async () => {\n  const {\n    access_token\n  } = await getAccessToken();\n  return fetch(NOW_PLAYING_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n};\nexport const getTopTracks = async () => {\n  const {\n    access_token\n  } = await getAccessToken();\n  return fetch(TOP_TRACKS_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n};","map":{"version":3,"sources":["/Users/toshi/Desktop/v-test/lib/spotify.js"],"names":["querystring","SPOTIFY_CLIENT_ID","client_id","SPOTIFY_CLIENT_SECRET","client_secret","SPOTIFY_REFRESH_TOKEN","refresh_token","process","env","basic","Buffer","from","toString","NOW_PLAYING_ENDPOINT","TOP_TRACKS_ENDPOINT","TOKEN_ENDPOINT","getAccessToken","response","fetch","method","headers","Authorization","body","stringify","grant_type","json","getNowPlaying","access_token","getTopTracks"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AAEA,MAAM;AACJC,EAAAA,iBAAiB,EAAEC,SADf;AAEJC,EAAAA,qBAAqB,EAAEC,aAFnB;AAGJC,EAAAA,qBAAqB,EAAEC;AAHnB,IAIFC,OAAO,CAACC,GAJZ;AAMA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAa,GAAET,SAAU,IAAGE,aAAc,EAA1C,EAA6CQ,QAA7C,CAAsD,QAAtD,CAAd;AACA,MAAMC,oBAAoB,GAAI,wDAA9B;AACA,MAAMC,mBAAmB,GAAI,0CAA7B;AACA,MAAMC,cAAc,GAAI,wCAAxB;;AAEA,MAAMC,cAAc,GAAG,YAAY;AACjC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,cAAD,EAAiB;AAC3CI,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,SAAQZ,KAAM,EADvB;AAEP,sBAAgB;AAFT,KAFkC;AAM3Ca,IAAAA,IAAI,EAAEtB,WAAW,CAACuB,SAAZ,CAAsB;AAC1BC,MAAAA,UAAU,EAAE,eADc;AAE1BlB,MAAAA;AAF0B,KAAtB;AANqC,GAAjB,CAA5B;AAYA,SAAOW,QAAQ,CAACQ,IAAT,EAAP;AACD,CAdD;;AAgBA,OAAO,MAAMC,aAAa,GAAG,YAAY;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAmB,MAAMX,cAAc,EAA7C;AAEA,SAAOE,KAAK,CAACL,oBAAD,EAAuB;AACjCO,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASM,YAAa;AAD/B;AADwB,GAAvB,CAAZ;AAKD,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,QAAM;AAAED,IAAAA;AAAF,MAAmB,MAAMX,cAAc,EAA7C;AAEA,SAAOE,KAAK,CAACJ,mBAAD,EAAsB;AAChCM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASM,YAAa;AAD/B;AADuB,GAAtB,CAAZ;AAKD,CARM","sourcesContent":["import querystring from 'querystring';\n\nconst {\n  SPOTIFY_CLIENT_ID: client_id,\n  SPOTIFY_CLIENT_SECRET: client_secret,\n  SPOTIFY_REFRESH_TOKEN: refresh_token\n} = process.env;\n\nconst basic = Buffer.from(`${client_id}:${client_secret}`).toString('base64');\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`;\nconst TOP_TRACKS_ENDPOINT = `https://api.spotify.com/v1/me/top/tracks`;\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`;\n\nconst getAccessToken = async () => {\n  const response = await fetch(TOKEN_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${basic}`,\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: querystring.stringify({\n      grant_type: 'refresh_token',\n      refresh_token\n    })\n  });\n\n  return response.json();\n};\n\nexport const getNowPlaying = async () => {\n  const { access_token } = await getAccessToken();\n\n  return fetch(NOW_PLAYING_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n};\n\nexport const getTopTracks = async () => {\n  const { access_token } = await getAccessToken();\n\n  return fetch(TOP_TRACKS_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}