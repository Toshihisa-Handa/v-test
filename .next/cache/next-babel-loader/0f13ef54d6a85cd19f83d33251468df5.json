{"ast":null,"code":"import _defineProperty from \"/Users/toshi/Desktop/v-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/toshi/Desktop/v-test/components/TopTracks.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport useSWR from 'swr';\nimport fetcher from '@/lib/fetcher';\nimport Track from '@/components/Track';\nexport default function TopTracks() {\n  _s();\n\n  var _this = this;\n\n  var _useSWR = useSWR('/api/top-tracks', fetcher),\n      data = _useSWR.data;\n\n  if (!data) {\n    return null;\n  }\n\n  return data.tracks.map(function (track, index) {\n    return /*#__PURE__*/_jsxDEV(Track, _objectSpread({\n      ranking: index + 1\n    }, track), track.songUrl, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, _this);\n  });\n}\n\n_s(TopTracks, \"Bw9uScf/xQBWZKhLCWSR33xISM4=\", false, function () {\n  return [useSWR];\n});\n\n_c = TopTracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"sources":["/Users/toshi/Desktop/v-test/components/TopTracks.js"],"names":["useSWR","fetcher","Track","TopTracks","data","tracks","map","track","index","songUrl"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AAAA,gBACjBH,MAAM,CAAC,iBAAD,EAAoBC,OAApB,CADW;AAAA,MAC1BG,IAD0B,WAC1BA,IAD0B;;AAGlC,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,SAAOA,IAAI,CAACC,MAAL,CAAYC,GAAZ,CAAgB,UAACC,KAAD,EAAQC,KAAR;AAAA,wBACrB,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEA,KAAK,GAAG;AAAxB,OAAmDD,KAAnD,GAAgCA,KAAK,CAACE,OAAtC;AAAA;AAAA;AAAA;AAAA,aADqB;AAAA,GAAhB,CAAP;AAGD;;GAVuBN,S;UACLH,M;;;KADKG,S","sourcesContent":["import useSWR from 'swr';\n\nimport fetcher from '@/lib/fetcher';\nimport Track from '@/components/Track';\n\nexport default function TopTracks() {\n  const { data } = useSWR('/api/top-tracks', fetcher);\n\n  if (!data) {\n    return null;\n  }\n\n  return data.tracks.map((track, index) => (\n    <Track ranking={index + 1} key={track.songUrl} {...track} />\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}