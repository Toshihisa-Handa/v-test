{"ast":null,"code":"export default (async (_, res) => {\n  const userResponse = await fetch('https://api.github.com/users/leerob');\n  const userReposResponse = await fetch('https://api.github.com/users/leerob/repos');\n  const user = await userResponse.json();\n  const repositories = await userReposResponse.json();\n  const mine = repositories.filter(repo => !repo.fork);\n  const stars = mine.reduce((accumulator, repository) => {\n    return accumulator + repository['stargazers_count'];\n  }, 0);\n  res.setHeader('Cache-Control', 'public, s-maxage=1200, stale-while-revalidate=600');\n  return res.status(200).json({\n    followers: user.followers,\n    stars\n  });\n});","map":{"version":3,"sources":["/Users/toshi/Desktop/v-test/pages/api/github.js"],"names":["_","res","userResponse","fetch","userReposResponse","user","json","repositories","mine","filter","repo","fork","stars","reduce","accumulator","repository","setHeader","status","followers"],"mappings":"AAAA,gBAAe,OAAOA,CAAP,EAAUC,GAAV,KAAkB;AAC/B,QAAMC,YAAY,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAAhC;AACA,QAAMC,iBAAiB,GAAG,MAAMD,KAAK,CACnC,2CADmC,CAArC;AAIA,QAAME,IAAI,GAAG,MAAMH,YAAY,CAACI,IAAb,EAAnB;AACA,QAAMC,YAAY,GAAG,MAAMH,iBAAiB,CAACE,IAAlB,EAA3B;AAEA,QAAME,IAAI,GAAGD,YAAY,CAACE,MAAb,CAAqBC,IAAD,IAAU,CAACA,IAAI,CAACC,IAApC,CAAb;AACA,QAAMC,KAAK,GAAGJ,IAAI,CAACK,MAAL,CAAY,CAACC,WAAD,EAAcC,UAAd,KAA6B;AACrD,WAAOD,WAAW,GAAGC,UAAU,CAAC,kBAAD,CAA/B;AACD,GAFa,EAEX,CAFW,CAAd;AAIAd,EAAAA,GAAG,CAACe,SAAJ,CACE,eADF,EAEE,mDAFF;AAKA,SAAOf,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB;AAC1BY,IAAAA,SAAS,EAAEb,IAAI,CAACa,SADU;AAE1BN,IAAAA;AAF0B,GAArB,CAAP;AAID,CAvBD","sourcesContent":["export default async (_, res) => {\n  const userResponse = await fetch('https://api.github.com/users/leerob');\n  const userReposResponse = await fetch(\n    'https://api.github.com/users/leerob/repos'\n  );\n\n  const user = await userResponse.json();\n  const repositories = await userReposResponse.json();\n\n  const mine = repositories.filter((repo) => !repo.fork);\n  const stars = mine.reduce((accumulator, repository) => {\n    return accumulator + repository['stargazers_count'];\n  }, 0);\n\n  res.setHeader(\n    'Cache-Control',\n    'public, s-maxage=1200, stale-while-revalidate=600'\n  );\n\n  return res.status(200).json({\n    followers: user.followers,\n    stars\n  });\n};\n"]},"metadata":{},"sourceType":"module"}