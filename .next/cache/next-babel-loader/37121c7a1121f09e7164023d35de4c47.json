{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/toshi/Desktop/v-test/components/TopTracks.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport useSWR from 'swr';\nimport fetcher from '@/lib/fetcher';\nimport Track from '@/components/Track';\nexport default function TopTracks() {\n  const {\n    data\n  } = useSWR('/api/top-tracks', fetcher);\n\n  if (!data) {\n    return null;\n  }\n\n  return data.tracks.map((track, index) => /*#__PURE__*/_jsxDEV(Track, _objectSpread({\n    ranking: index + 1\n  }, track), track.songUrl, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n}","map":{"version":3,"sources":["/Users/toshi/Desktop/v-test/components/TopTracks.js"],"names":["useSWR","fetcher","Track","TopTracks","data","tracks","map","track","index","songUrl"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,MAAM,CAAC,iBAAD,EAAoBC,OAApB,CAAvB;;AAEA,MAAI,CAACG,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,SAAOA,IAAI,CAACC,MAAL,CAAYC,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,kBACrB,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,KAAK,GAAG;AAAxB,KAAmDD,KAAnD,GAAgCA,KAAK,CAACE,OAAtC;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAGD","sourcesContent":["import useSWR from 'swr';\n\nimport fetcher from '@/lib/fetcher';\nimport Track from '@/components/Track';\n\nexport default function TopTracks() {\n  const { data } = useSWR('/api/top-tracks', fetcher);\n\n  if (!data) {\n    return null;\n  }\n\n  return data.tracks.map((track, index) => (\n    <Track ranking={index + 1} key={track.songUrl} {...track} />\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}